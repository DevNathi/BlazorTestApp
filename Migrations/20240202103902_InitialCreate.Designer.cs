// <auto-generated />
using BlazorTestApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorTestApp.Migrations
{
    [DbContext(typeof(TestDBContext))]
    [Migration("20240202103902_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorTestApp.Models.Branch", b =>
                {
                    b.Property<int>("B_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("B_Id"));

                    b.Property<int>("B_Active")
                        .HasColumnType("int");

                    b.Property<string>("B_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("B_Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("BlazorTestApp.Models.UserModel", b =>
                {
                    b.Property<int>("U_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("U_Id"));

                    b.Property<int>("U_Active")
                        .HasColumnType("int");

                    b.Property<int>("U_BranchId")
                        .HasColumnType("int");

                    b.Property<string>("U_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("U_Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("U_Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("U_WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("U_Id");

                    b.HasIndex("U_BranchId");

                    b.HasIndex("U_WarehouseId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlazorTestApp.Models.Warehouse", b =>
                {
                    b.Property<int>("W_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("W_Id"));

                    b.Property<int>("W_Active")
                        .HasColumnType("int");

                    b.Property<int>("W_BranchId")
                        .HasColumnType("int");

                    b.Property<string>("W_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("W_TradingWarehouse")
                        .HasColumnType("int");

                    b.Property<int>("W_Wms")
                        .HasColumnType("int");

                    b.HasKey("W_Id");

                    b.HasIndex("W_BranchId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("BlazorTestApp.Models.UserModel", b =>
                {
                    b.HasOne("BlazorTestApp.Models.Branch", "Branch")
                        .WithMany("Users")
                        .HasForeignKey("U_BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BlazorTestApp.Models.Warehouse", "Warehouse")
                        .WithMany("Users")
                        .HasForeignKey("U_WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("BlazorTestApp.Models.Warehouse", b =>
                {
                    b.HasOne("BlazorTestApp.Models.Branch", "Branch")
                        .WithMany("Warehouses")
                        .HasForeignKey("W_BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("BlazorTestApp.Models.Branch", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("BlazorTestApp.Models.Warehouse", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
